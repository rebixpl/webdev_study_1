.container {
  border: 1px solid blue;
  padding: 10px;
  display: grid;
  /* grid-template-columns: 100px 200px 300px; */
  /* grid-template-rows: 100px 200px 300px; */
  /* grid-template: rows / columns; */
  /* grid-template: 100px 200px 300px / 25% 25% 25%; */
  /* grid-template: 100px 200px 300px / 1fr 3fr 1fr ; */
  grid-template: 100px 200px 300px 100px / repeat(3, 1fr);
  gap: 10px;
  grid-template-areas:
    "A A B"
    "D E B"
    "G H I"
    "C C F";
}

.box {
  background-color: orange;
  border: 1px solid blue;
}

.box1 {
  grid-area: A;
}
.box2 {
  grid-area: B;
}
.box3 {
  grid-area: C;
}
.box4 {
  grid-area: D;
}
.box5 {
  grid-area: E;
}
.box6 {
  grid-area: F;
}
.box7 {
  grid-area: G;
}
.box8 {
  grid-area: H;
}
.box9 {
  grid-area: I;
}

/* .box7 {
  order: -1; /* 0 is default value, so by setting it to -1 box7 will be first in our grid */
/* } 

/* .box1 {
  /* grid-row-start: 2;
  grid-row-end: 3;
  grid-column-start: 2;
  grid-column-end: 3; */
/* grid-row: row start value / row end value;
  grid-column: column start value / column end value; */
/* grid-row: 2/3; */
/* grid-column: 2/3; */
/* grid-area: row start value / column start value / row end value / column end value; */
/* grid-area: 2 / 2 / 3 / 3; */
/* } 

/* .box4 {
  /* grid-area: 2/1/3/3; */
/*  grid-row: 2/3;
  grid-column: 1 / span 2;
}

.box3 {
  grid-area: 2/3/4/4;
} */

/* If youâ€™re placing items onto their parent grid with grid-column or grid-row, you can use the span keyword 
to avoid specifying end lines when items should span more than one column or row. */
/* .item {
  grid-column: 2 / 5;
  grid-row: 1 / 3;
}

.item {
  grid-column: 2 / span 3;
  grid-row: 1 / span 2;
} */
